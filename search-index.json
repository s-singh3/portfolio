[{"content":"Use the video shortcode to embed your video files from Hugo Page Resources.\nWith a page bundle looking like the following:\nembed-videos/ |-- index.md |-- my-video.jpg |-- my-video.mp4 |-- my-video.webm You can embed my-video like this:\n{{\u0026lt; video src=\u0026#34;my-video\u0026#34; autoplay=\u0026#34;true\u0026#34; controls=\u0026#34;false\u0026#34; loop=\u0026#34;true\u0026#34; \u0026gt;}} The shortcode looks for media files matching the filename my-video*. For each video MIME type file, a \u0026lt;source\u0026gt; element is added. The first image MIME type file is used as poster (thumbnail). It will render the following HTML:\n\u0026lt;video autoplay loop poster=\u0026#34;/blog/embed-videos/my-video.jpg\u0026#34; width=\u0026#34;100%\u0026#34; playsinline \u0026gt; \u0026lt;source src=\u0026#34;/blog/embed-videos/my-video.mp4\u0026#34; type=\u0026#34;video/mp4\u0026#34; /\u0026gt; \u0026lt;source src=\u0026#34;/blog/embed-videos/my-video.webm\u0026#34; type=\u0026#34;video/webm\u0026#34; /\u0026gt; \u0026lt;/video\u0026gt; You can set a Markdown caption, wrapping the \u0026lt;video\u0026gt; inside a \u0026lt;figure\u0026gt;.\nAdditionally, the shortcode allows you to set the following attributes:\nAttribute Default autoplay false controls true height loop false muted true preload width 100% playsinline true Learn more about the \u0026lt;video\u0026gt; attributes here.\n","date":"2022-04-26","id":0,"permalink":"/blog/embed-video-files/","summary":"Use the video shortcode to embed your video files from Hugo Page Resources.\n","tags":[],"title":"Embed Video Files"},{"content":"The theme optimizes images by default with a custom Hugo\u0026rsquo;s markdown render hook:\nThe theme creates resized versions for each image, ranging from 100 to 700 pixels wide. It generates WebP versions for each size if the original image format isn\u0026rsquo;t WebP. The theme keeps the original file format as a fallback for browsers that don\u0026rsquo;t support the WebP format. Images in SVG format are embedded as-is. Blog Post Cover Images# Use the front matter of your posts to add cover images:\n--- cover: src: alexandre-van-thuan-mr9FouttLGY-unsplash.jpg alt: The interior of Stadsbiblioteket in Stockholm - Gunnar Asplunds library from 1928. The architecture is a transition between neoclassicism and functionalism. caption: By [Alexandre Van Thuan](https://unsplash.com/photos/mr9FouttLGY) --- Captions# Add captions to your inline images like this:\n--- ![Alt text](image-url.jpg \u0026#34;Caption with **markdown support**\u0026#34;) --- The main library in Vancouver is architecturally significant. The angles and levels contour together to produce a trippy scene. It\u0026rsquo;s pretty from the outside but stunning from the inside. By Aaron Thomas JPEG and WebP Quality# The default quality is 75%. See the official Image Processing Config Hugo docs. Change it by adding the following to the hugo.toml file:\n[imaging] quality = 75 Resizing# By default, the theme creates resized versions of images ranging from 300 to 700 pixels wide in increments of 100 pixels. Override the resize behavior by adding the following to the hugo.toml file:\n[params] [params.imageResize] min = 300 max = 700 increment = 100 Lazy Loading# Images are lazily loaded by default using the loading=\u0026quot;lazy\u0026quot; attribute on HTML img tags.\n","date":"2021-10-16","id":1,"permalink":"/blog/image-optimization/","summary":"The theme optimizes images by default with a custom Hugo\u0026rsquo;s markdown render hook:\nThe theme creates resized versions for each image, ranging from 100 to 700 pixels wide. It generates WebP versions for each size if the original image format isn\u0026rsquo;t WebP. The theme keeps the original file format as a fallback for browsers that don\u0026rsquo;t support the WebP format. Images in SVG format are embedded as-is. Blog Post Cover Images# Use the front matter of your posts to add cover images:\n","tags":[],"title":"Image Optimization"},{"content":"This theme uses Prism for code highlighting. Other Hugo themes usually include a pre-configured version of Prism, which complicates updates and clutters the source code base with third-party JavaScript.\nOnly the Prism features you select in the Hugo site configuration are bundled by the build process. This way, Prism can be easily updated with npm and the size of the JavaScript and CSS bundles are minimized by only including what you need.\nHere is a an example configuration demonstrating how to configure languages and plugins in the hugo.toml file of your Hugo site:\n[params] [params.prism] languages = [ \u0026#34;markup\u0026#34;, \u0026#34;css\u0026#34;, \u0026#34;clike\u0026#34;, \u0026#34;javascript\u0026#34; ] plugins = [ \u0026#34;normalize-whitespace\u0026#34;, \u0026#34;toolbar\u0026#34;, \u0026#34;copy-to-clipboard\u0026#34; ] Languages# The following languages are available:\nabap abnf actionscript ada agda al antlr4 apacheconf apex apl applescript aql arduino arff armasm arturo asciidoc asm6502 asmatmel aspnet autohotkey autoit avisynth avro-idl awk bash basic batch bbcode bbj bicep birb bison bnf bqn brainfuck brightscript bro bsl c cfscript chaiscript cil cilkc cilkcpp clike clojure cmake cobol coffeescript concurnas cooklang coq core cpp crystal csharp cshtml csp css-extras css csv cue cypher d dart dataweave dax dhall diff django dns-zone-file docker dot ebnf editorconfig eiffel ejs elixir elm erb erlang etlua excel-formula factor false firestore-security-rules flow fortran fsharp ftl gap gcode gdscript gedcom gettext gherkin git glsl gml gn go-module go gradle graphql groovy haml handlebars haskell haxe hcl hlsl hoon hpkp hsts http ichigojam icon icu-message-format idris iecst ignore inform7 ini io j java javadoc javadoclike javascript javastacktrace jexl jolie jq js-extras js-templates jsdoc json json5 jsonp jsstacktrace jsx julia keepalived keyman kotlin kumir kusto latex latte less lilypond linker-script liquid lisp livescript llvm log lolcode lua magma makefile markdown markup-templating markup mata matlab maxscript mel mermaid metafont mizar mongodb monkey moonscript n1ql n4js nand2tetris-hdl naniscript nasm neon nevod nginx nim nix nsis objectivec ocaml odin opencl openqasm oz parigp parser pascal pascaligo pcaxis peoplecode perl php-extras php phpdoc plant-uml plsql powerquery powershell processing prolog promql properties protobuf psl pug puppet pure purebasic purescript python q qml qore qsharp r racket reason regex rego renpy rescript rest rip roboconf robotframework ruby rust sas sass scala scheme scss shell-session smali smalltalk smarty sml solidity solution-file soy sparql splunk-spl sqf sql squirrel stan stata stylus supercollider swift systemd t4-cs t4-templating t4-vb tap tcl textile toml tremor tsx tt2 turtle twig typescript typoscript unrealscript uorazor uri v vala vbnet velocity verilog vhdl vim visual-basic warpscript wasm web-idl wgsl wiki wolfram wren xeora xml-doc xojo xquery yaml yang zig Plugins# Before using a plugin in production, read its documentation and test it thoroughly. E.g., the remove-initial-line-feed plugin is still available despite being deprecated in favor of normalize-whitespace.\nMany Prism plugins require using \u0026lt;pre\u0026gt; tags with custom attributes. Hugo uses Goldmark as Markdown handler, which by default doesn\u0026rsquo;t render raw inline HTML, so make sure to enable unsafe rendering if required:\n[markup] [markup.goldmark] [markup.goldmark.renderer] unsafe = true The following plugins are available:\nautolinker autoloader command-line copy-to-clipboard custom-class data-uri-highlight diff-highlight download-button file-highlight filter-highlight-all highlight-keywords inline-color jsonp-highlight keep-markup line-highlight line-numbers match-braces normalize-whitespace previewers remove-initial-line-feed show-invisibles show-language toolbar treeview unescaped-markup wpd Examples# Copy to Clipboard# copy-to-clipboard requires the toolbar plugin, so make sure to add it after adding toolbar in the hugo.toml file:\nConfig:\n[params.prism] # ... plugins = [ \u0026#34;toolbar\u0026#34;, \u0026#34;copy-to-clipboard\u0026#34; ] Line Numbers# Config:\n[params.prism] plugins = [ \u0026#34;line-numbers\u0026#34; ] Input:\n\u0026lt;pre class=\u0026#34;line-numbers\u0026#34;\u0026gt; \u0026lt;code\u0026gt; Example \u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt; Output:\nHello, World! Foo Bar Command Line# Config:\n[params.prism] languages = [ \u0026#34;bash\u0026#34; ] plugins = [ \u0026#34;command-line\u0026#34; ] Input:\n\u0026lt;pre class=\u0026#34;command-line language-bash\u0026#34; data-user=\u0026#34;root\u0026#34; data-host=\u0026#34;localhost\u0026#34;\u0026gt; \u0026lt;code\u0026gt; cd /usr/local/etc cp php.ini php.ini.bak vi php.ini \u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt; \u0026lt;pre class=\u0026#34;command-line language-bash\u0026#34; data-user=\u0026#34;chris\u0026#34; data-host=\u0026#34;remotehost\u0026#34; data-output=\u0026#34;2, 4-8\u0026#34; \u0026gt; \u0026lt;code\u0026gt; pwd /usr/home/chris/bin ls -la total 2 drwxr-xr-x 2 chris chris 11 Jan 10 16:48 . drwxr--r-x 45 chris chris 92 Feb 14 11:10 .. -rwxr-xr-x 1 chris chris 444 Aug 25 2013 backup -rwxr-xr-x 1 chris chris 642 Jan 17 14:42 deploy \u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt; Output:\ncd /usr/local/etc cp php.ini php.ini.bak vi php.ini pwd /usr/home/chris/bin ls -la total 2 drwxr-xr-x 2 chris chris 11 Jan 10 16:48 . drwxr--r-x 45 chris chris 92 Feb 14 11:10 .. -rwxr-xr-x 1 chris chris 444 Aug 25 2013 backup -rwxr-xr-x 1 chris chris 642 Jan 17 14:42 deploy Diff Highlight# Config:\n[params.prism] languages = [ \u0026#34;javascript\u0026#34;, \u0026#34;diff\u0026#34; ] plugins = [ \u0026#34;diff-highlight\u0026#34; ] Input:\n\u0026lt;pre class=\u0026#34;language-diff-javascript diff-highlight\u0026#34;\u0026gt; \u0026lt;code\u0026gt; @@ -4,6 +4,5 @@ - let foo = bar.baz([1, 2, 3]); - foo = foo + 1; + const foo = bar.baz([1, 2, 3]) + 1; console.log(`foo: ${foo}`); \u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt; Output:\n@@ -4,6 +4,5 @@ - let foo = bar.baz([1, 2, 3]); - foo = foo + 1; + const foo = bar.baz([1, 2, 3]) + 1; console.log(`foo: ${foo}`); ","date":"2021-07-28","id":2,"permalink":"/blog/prism-code-highlighting-showcase/","summary":"This theme uses Prism for code highlighting. Other Hugo themes usually include a pre-configured version of Prism, which complicates updates and clutters the source code base with third-party JavaScript.\nOnly the Prism features you select in the Hugo site configuration are bundled by the build process. This way, Prism can be easily updated with npm and the size of the JavaScript and CSS bundles are minimized by only including what you need.\n","tags":[],"title":"Prism Code Highlighting Showcase"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings# The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1# H2# H3# H4# H5# H6# Paragraph# Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes# The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution# Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution# Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables# Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables# Italics Bold Code italics bold code Code Blocks# Code block with backticks# \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces# \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode# \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types# Ordered List# First item Second item Third item Unordered List# List item Another item And another item Nested list# Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark# GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11","id":3,"permalink":"/blog/markdown-syntax/","summary":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\n","tags":["markdown","css","html","hugo-basic-example"],"title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube Privacy Enhanced Shortcode# Twitter Simple Shortcode# “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Design Reviewed | Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode# ","date":"2019-03-10","id":4,"permalink":"/blog/rich-content/","summary":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n","tags":["shortcodes","privacy","hugo-basic-example"],"title":"Rich Content"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt# The Van de Graaf Canon\nMane refeci capiebant unda mulcebat# Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09","id":5,"permalink":"/blog/placeholder-text/","summary":"Lorem est tota propiore conpellat pectoribus de pectora summo.\n","tags":["markdown","text","hugo-basic-example"],"title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples# Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08","id":6,"permalink":"/blog/math-typesetting/","summary":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\n","tags":["hugo-basic-example"],"title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }","date":"2019-03-05","id":7,"permalink":"/blog/emoji-support/","summary":"Emoji can be enabled in a Hugo project in a number of ways.\n","tags":["emoji","hugo-basic-example"],"title":"Emoji Support"}]